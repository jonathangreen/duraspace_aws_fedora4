{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "This is a template to create a t1.micro or m1.small instance running Fedora 4 under ubuntu.",
  
  "Parameters" : {
      
    "DBRootPassword": {
      "NoEcho": "true",
      "Description" : "Root password for MySQL",
      "Default" : "admin",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.small"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String"
    }
  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-b027efd8" }
    }
  },
    
  "Resources" : {     
      
    "WebServer": {  
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
        "KeyName": { "Ref": "KeyName" } ,
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#cloud-config\n",
          "packages:\n",
          "- puppet\n", 
          "- git\n",
          "- tomcat7\n",
          "runcmd:\n",
          "- [git, clone, \"https://github.com/jonathangreen/duraspace_aws_fedora4.git\", /tmp/install]\n",
          "- [touch, /etc/authbind/byport/80]",
          "- [chmod, 500, /etc/authbind/byport/80]",
          "- [chown, tomcat7, /etc/authbind/byport/80]",
          "- [service, tomcat7, stop]",
          "- [mv, /tmp/install/shell/files/tomcat7, /etc/default/tomcat7]",
          "- [mv, /tmp/install/shell/files/server.xml, /etc/tomcat7]",
          "- [service, tomcat7, start]"
        ]]}}           
      }
    },
    
    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH on port 22.",
        "SecurityGroupIngress" : [
          { 
            "IpProtocol" : "tcp", 
            "FromPort" : "80", 
            "ToPort" : "80", 
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }      
    }          
  },
  
  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]}]] },
      "Description" : "URL for newly created LAMP stack"
    },
    "SSHCommand" : {
      "Value" : { "Fn::Join" : ["", ["ssh ubuntu@", { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]}]] },
      "Description" : "SSH command to connect to new stack."
    }
  }
}
